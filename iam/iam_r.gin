port = 12345
manualSeed = 1111
dist = 'DDP'

num_channels = 1
num_gates = 2
output_classes = 80

GradCheck = 0

# Parameters for get_images (ds_load.py):
# ==============================================================================
get_images.max_w = 750
get_images.max_h = 750
get_images.nch = %num_channels

# Parameters for SameTrCollate (ds_load.py):
# ==============================================================================
SameTrCollate.prjAug = True
SameTrCollate.prjVal = 125

# Parameters for train (train.py):
# ==============================================================================
train.experiment_name = 'iam_gin_test4_'

train.AMP = False
train.WdB = False
train.wdbprj = 'prj_Name'
train.train_data_list = 'iam/train.gc'
train.train_data_path = '/home/zju/w4/OrigamiNet/iam_data/pargs/'
train.test_data_list  = 'iam/val.gc'
train.test_data_path  = '/home/zju/w4/OrigamiNet/iam_data/pargs/'
train.train_batch_size = 1
train.val_batch_size   = 1
train.workers = 1
train.lr = 0.01
train.continue_model = ''
train.valInterval = 500
train.num_iter = 0
train.bert_base_model = 'emilyalsentzer/Bio_ClinicalBERT'

# Parameters for OrigamiNet_extended (cnv_model_r.py):
# ==============================================================================
OrigamiNet_extended.num_channels = %num_channels
OrigamiNet_extended.output_classes  = %output_classes
OrigamiNet_extended.feature_upstream = 33
OrigamiNet_extended.GradCheck = %GradCheck

OrigamiNet_extended.num_layers = 12
OrigamiNet_extended.wmul = 1.0

OrigamiNet_extended.layer_sizes = {0:  128,
                       2:  256,
                       4:  512,
                       11: 256  }

##resize structure##
MaxPool2d.kernel_size = (2,2)

Upsample.mode = 'bilinear'
Upsample.align_corners = True
s1/Upsample.size = (450,15)
s2/Upsample.size = (1100,8)

OrigamiNet_extended.layer_resize = {
                  0: @MaxPool2d(),
                  2: @MaxPool2d(),
                  4: @MaxPool2d(),

                  6: @PadPool(),
                  8: @PadPool(),

                  10: @s1/Upsample(),
                  11: @s2/Upsample()
            }

# RNN_SIM for similarity part
# RNN_SIM.VOCAB_SIZE = 10000
RNN_SIM.EMBEDDING_DIM = 80
RNN_SIM.RNN_UNITS = 64
RNN_SIM.BI_RNN = True
RNN_SIM.RNN_LAYERS = 2


# Parameters for InitBlock (cnv_model.py):
# ==============================================================================
InitBlock.num_channels = %num_channels

# Parameters for GateBlock (cnv_model.py):
# ==============================================================================
#GateBlock.GradCheck = %num_gates
GateBlock.GradCheck = %GradCheck

TextEncoder.bert_base_model = 'emilyalsentzer/Bio_ClinicalBERT'
TextEncoder.out_dim = 80
TextEncoder.freeze_layers = [0,1,2,3,4,5]
